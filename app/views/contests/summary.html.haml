.container
  %h1 Ringkasan
  %p Banyak peserta: #{@count}

  %h2 Isian
  %table.table.table-condensed.table-striped.table-responsive
    %thead
      = create_data_row(['No.', 'Soal', 'Jawaban', '# Benar', '% Benar',
                         'Jawaban terbanyak', '# Jawaban', '% Jawab'], 'th')

    %tbody
      - @short_problems.each do |sp|
        - most = sp.most_answer
        %tr
          %td= sp.problem_no
          = latex_and_markdown :td, sp.statement
          %td= sp.answer
          %td= sp.correct
          %td= percentage average sp.correct
          %td= most.map(&:answer)
          %td= most.empty? ? 0 : most[0].count
          %td= percentage average(most.empty? ? 0 : most[0].count)

  %h2 Uraian
  %table.table.table-condensed.table-striped.table-responsive
    %thead
      = create_data_row(['No.', 'Soal', '-'] + (0..LongProblem::MAX_MARK).to_a + ['Rata-rata'],
                        'th')

    %tbody
      - @long_problems.each do |lp|
        - ls = lp.long_submissions
        %tr
          %td= lp.problem_no
          = latex_and_markdown :td, lp.statement
          %td= ls.where(score: nil).count
          - (LongProblem::MAX_MARK + 1).times do |i|
            %td= ls.where(score: i).count
          %td= average_mark(ls)
